{"version":3,"file":"toygl.min.js","sources":["../src/glUtils.js","../src/defaultValue.js","../src/createContext.js","../src/defined.js","../src/createFramebuffer.js","../src/isPowerOfTwo.js","../src/draw.js","../src/index.js","../src/setState.js","../src/clear.js","../src/isArrayLike.js","../src/createTexture.js","../src/createCubeMap.js"],"sourcesContent":["const global = window;\n\nfunction createProgram(gl, vertexShaderSource, fragmentShaderSource) {\n  const vs = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vs, vertexShaderSource);\n  gl.compileShader(vs);\n  \n  const fs = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fs, fragmentShaderSource);\n  gl.compileShader(fs);\n\n  const program = gl.createProgram();\n  gl.attachShader(program, vs);\n  gl.attachShader(program, fs);\n\n  gl.deleteShader(vs);\n  gl.deleteShader(fs);\n\n  // TODO:\n  // for (const attributeName in attributeLocation) {\n  //   if (Object.hasOwnProperty.call(attributeLocation, attributeName)) {\n  //     const location = attributeLocation[attributeName];\n  //     gl.bindAttribLocation(program, location, attributeName);\n  //   }\n  // }\n\n  gl.linkProgram(program);\n\n  let log = '';\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n      log = gl.getShaderInfoLog(fs);\n      console.error('Fragment shader failed to compiled: ' + log);\n    }\n\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n      log = gl.getShaderInfoLog(vs);\n      console.error('Vertex shader failed to compiled: ' + log);\n    }\n\n    log = gl.getProgramInfoLog(program);\n    console.error('Shader program link log: ' + log);\n    throw new Error(info);\n  }\n\n  return program;\n}\n\nfunction setCanvasToDisplaySize(canvas) {\n  const dpr = global.devicePixelRatio;\n  const displayWidth = Math.round(canvas.clientWidth * dpr);\n  const displayHeight = Math.round(canvas.clientHeight * dpr);\n\n  const needResize = canvas.width !== displayWidth ||\n                     canvas.height !== displayHeight;\n\n  if (needResize) {\n    canvas.width = displayWidth;\n    canvas.height = displayHeight;\n  }\n}\n\nfunction validateStencilFunc(func) {\n  func = func.toUpperCase();\n  if (func === 'NEVER' ||\n    func === 'ALWAYS' ||\n    func === 'LESS' ||\n    func === 'LEQUAL' ||\n    func === 'NOTEQUAL' ||\n    func === 'EQUAL' ||\n    func === 'GREATER' ||\n    func === 'GEQUAL'\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction validateStencilOp(op) {\n  op = op.toUpperCase();\n  if (op === 'KEEP' ||\n    op === 'ZERO' ||\n    op === 'REPLACE' ||\n    op === 'INCR' ||\n    op === 'DECR' ||\n    op === 'INVERT' ||\n    op === 'INCR_WRAP' ||\n    op === 'DECR_WRAP'\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport {\n  validateStencilFunc,\n  validateStencilOp,\n  createProgram,\n  setCanvasToDisplaySize,\n};\n","function defaultValue(a, b) {\n  if (a === null || a === undefined) {\n    return b;\n  }\n  return a;\n}\n\ndefaultValue.EMPTY_OBJECT = Object.freeze({});\n\nexport default defaultValue;\n","import { setCanvasToDisplaySize } from \"./glUtils.js\";\nimport defaultValue from './defaultValue.js';\n\nconst global = window;\n\n/**\n * Create an instance of WebGLRenderingContext or WebGL2RenderingContext.\n * @param {Object} contextOptions \n * @param {Boolean} contextOptions.alpha \n * @param {Boolean} contextOptions.depth \n * @param {Boolean} contextOptions.stencil \n * @param {Boolean} contextOptions.antialias \n * @param {Boolean} contextOptions.preserveDrawingBuffer \n * @param {Boolean} contextOptions.premultipliedAlpha \n * @param {Boolean} contextOptions.requireWebgl2 \n * @param {HTMLCanvasElement} contextOptions.canvas \n * @returns \n */\nfunction createContext(contextOptions) {\n  contextOptions = defaultValue(contextOptions, defaultValue.EMPTY_OBJECT);\n\n  let canvas = contextOptions.canvas;\n  if (!canvas) {\n    canvas = global.document.createElement('canvas');\n    canvas.style.width = '100vw';\n    canvas.style.height = '100vh';\n    canvas.style.setProperty('display', 'block');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n  }\n\n  let gl;\n  if (contextOptions.requireWebgl2) {\n    gl = canvas.getContext('webgl2', contextOptions);\n  } else {\n    gl = canvas.getContext('webgl', contextOptions);\n  }\n\n  return gl;\n};\n\nexport default createContext;\n","function defined(a) {\n  return a !== null && a !== undefined;\n}\n\nexport default defined;\n","const FRAMEBUFFER_STATUS = {\n  36053: 'FRAMEBUFFER_COMPLETE',\n  36054: 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT',\n  36055: 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT',\n  36057: 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS',\n  36061: 'FRAMEBUFFER_UNSUPPORTED',\n};\n\nfunction createFramebuffer(gl, options) {\n  const { colorTexture, depthTexture, depthRenderbuffer } = options;\n\n  const fb = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n\n  // color\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, colorTexture);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, colorTexture, 0);\n\n  // depth\n  if (depthTexture) {\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, depthTexture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthTexture, 0);\n  }\n  else if (depthRenderbuffer) {\n    const renderbuffer = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, depthRenderbuffer.width, depthRenderbuffer.height);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderbuffer);\n  }\n\n  const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n  if (status !== gl.FRAMEBUFFER_COMPLETE) {\n    throw new Error('createFramebuffer: framebuffer combination is NOT completed! Current status is ' + FRAMEBUFFER_STATUS[status] + '.');\n  }\n\n  return fb;\n}\n\nexport default createFramebuffer;\n","function isPowerOfTwo(value) {\n  return (value & (value - 1)) === 0;\n}\n\nexport default isPowerOfTwo;\n","import isArrayLike from './isArrayLike.js';\nimport defaultValue from './defaultValue.js';\nimport {\n  createProgram,\n  setCanvasToDisplaySize\n} from './glUtils.js';\nimport isPowerOfTwo from './isPowerOfTwo.js';\n\nconst cachedProgram = {};\nconst cachedBuffer = {};\nconst cachedTextures = {};\n\nfunction getAttributeSize(activeAttribute) {\n  const { name, size, type } = activeAttribute;\n  let s = 0;\n  switch (type) {\n    case 5126: // gl.FLOAT\n      s = size * 1;\n      break;\n    case 35664: // gl.FLOAT_VEC2\n      s = 2 * size;\n      break;\n    case 35665: // gl.FLOAT_VEC3\n      s = 3 * size;\n      break;\n    case 35666: // gl.FLOAT_VEC4\n      s = 4 * size;\n      break;\n    case 35674: // gl.FLOAT_MAT2\n      s = 4 * size;\n      break;\n    case 35675: // gl.FLOAT_MAT3\n      s = 9 * size;\n      break;\n    case 35676: // gl.FLOAT_MAT4\n      s = 16 * size;\n      break;\n    default:\n      console.warn('无法识别 attribute ' + name + ' 的类型：' + type);\n  }\n\n  return s;\n}\n\nfunction isArrayBufferView(value) {\n  return value instanceof Float32Array ||\n         value instanceof Uint8Array ||\n         value instanceof Uint16Array ||\n         value instanceof Uint32Array ||\n         value instanceof Int8Array ||\n         value instanceof Int16Array ||\n         value instanceof Int32Array;\n\n}\n\nfunction createAttributeBuffer(gl, typedArray, usage) {\n  const buffer = gl.createBuffer();\n  usage = defaultValue(usage, gl.STATIC_DRAW);\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, typedArray, usage);\n  return buffer;\n};\n\nfunction createIndicesBuffer(gl, typedArray, usage) {\n  const buffer = gl.createBuffer();\n  usage = defaultValue(usage, gl.STATIC_DRAW);\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, typedArray, usage);\n  return buffer;\n};\n\nfunction draw(gl, options) {\n  const { attributes, indices, vs: vsSource, fs: fsSource, count, fb } = options;\n  const primitiveType = defaultValue(options.primitiveType, gl.TRIANGLES);\n  const uniforms = defaultValue(options.uniforms, defaultValue.EMPTY_OBJECT);\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n\n  const key = vsSource + fsSource;\n  let program = cachedProgram[key];\n  if (!program) {\n    program = createProgram(gl, vsSource, fsSource);\n    cachedProgram[key] = program;\n  }\n\n  gl.useProgram(program);\n\n  // attributes\n  const numberOfAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < numberOfAttributes; i++) {\n    const activeAttribute = gl.getActiveAttrib(program, i);\n    const attributeName = activeAttribute.name;\n\n    if (Object.hasOwnProperty.call(attributes, attributeName)) {\n      const attribute = attributes[attributeName];\n      const attribLocation = gl.getAttribLocation(program, attributeName);\n\n      if (attribLocation === -1) {\n        continue;\n      }\n\n      const key = attribute.toString();\n      let buffer = cachedBuffer[key];\n      const size = getAttributeSize(activeAttribute);\n      if (Array.isArray(attribute)) {\n        // const isInteger = Number.isInteger(attribute[0]);\n        // const typedArray = isInteger ? Uint32Array : Float32Array;\n        const typedArray = Float32Array;\n        if (!buffer) {\n          buffer = createAttributeBuffer(gl, new typedArray(attribute));\n          cachedBuffer[key] = buffer;\n        }\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.enableVertexAttribArray(attribLocation);\n        gl.vertexAttribPointer(\n          attribLocation,\n          size,\n          gl.FLOAT,\n          false,\n          0,\n          0\n        );\n      } else if (isArrayBufferView(attribute)) {\n        if (!buffer) {\n          buffer = createAttributeBuffer(gl, attribute);\n          cachedBuffer[key] = buffer;\n        }\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.enableVertexAttribArray(attribLocation);\n        gl.vertexAttribPointer(\n          attribLocation,\n          size,\n          gl.FLOAT,\n          false,\n          0,\n          0\n        );\n      }\n\n    }\n  }\n\n  // uniforms\n  const numberOfUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  const maximumTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  let currentTextureUnit = 0;\n  for (let i = 0; i < numberOfUniforms; i++) {\n    const activeUniform = gl.getActiveUniform(program, i);\n    const uniformName = activeUniform.name;\n    \n    if (Object.hasOwnProperty.call(uniforms, uniformName)) {\n      const uniform = uniforms[uniformName];\n      const uniformLocation = gl.getUniformLocation(program, uniformName);\n\n      if (uniformLocation === null) {\n        continue;\n      }\n\n      // gl.useProgram(program);\n\n      const typeOfUniform = typeof uniform;\n      const textureUnit = gl.TEXTURE0 + currentTextureUnit;\n      if (uniform instanceof WebGLTexture) {\n        gl.activeTexture(textureUnit);\n\n        if (activeUniform.type === gl.SAMPLER_2D) {\n          gl.bindTexture(gl.TEXTURE_2D, uniform);\n        } else if (activeUniform.type === gl.SAMPLER_CUBE) {\n          gl.bindTexture(gl.TEXTURE_CUBE_MAP, uniform);\n        } else {\n          throw new Error(activeUniform, 'type MUST be SAMPLER_2D or SAMPLER_CUBE');\n        }\n\n        gl.uniform1i(uniformLocation, currentTextureUnit);\n        currentTextureUnit++;\n      } else if (isArrayLike(uniform)) {\n        const size = uniform.length;\n        if (size <= 4) {\n          gl['uniform' + size + 'fv' ](uniformLocation, uniform);\n        } else if (size <= 16) {\n          const order = Math.floor(Math.sqrt(size));\n          const transpose = false; // MUST be false\n          gl['uniformMatrix' + order + 'fv'](uniformLocation, transpose, Array.from(uniform));\n        }\n      } else if (typeOfUniform === 'number') {\n        gl.uniform1f(uniformLocation, uniform);\n      } else if (typeOfUniform === 'string') {\n\n        if (currentTextureUnit > maximumTextureUnits) {\n          console.error('texture exceed maximum texture units.');\n          continue;\n        }\n\n        let texture = cachedTextures[uniform];\n\n        if (!texture) {\n          texture = gl.createTexture();\n          gl.activeTexture(textureUnit);\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([255, 255, 255, 255]));\n          const image = new Image();\n          image.src = uniform;\n          image.addEventListener('load', () => {\n            gl.activeTexture(textureUnit);\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n\n            if (isPowerOfTwo(image.width) && isPowerOfTwo(image.height)) {\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n              gl.generateMipmap(gl.TEXTURE_2D);\n            }\n          });\n\n          cachedTextures[uniform] = texture;\n        }\n\n        gl.activeTexture(textureUnit);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.uniform1i(uniformLocation, currentTextureUnit);\n\n        currentTextureUnit++;\n      }\n    }\n  }\n\n  // draw\n  if (indices && indices.length > 0) {\n    let max = Number.MIN_SAFE_INTEGER;\n    for (const index of indices) {\n      max = Math.max(index, max);\n    }\n    let type, typedArray;\n    if (max <= 255) {\n      type = gl.UNSIGNED_BYTE;\n      typedArray = Uint8Array;\n    } else if (max <= 65535) {\n      type = gl.UNSIGNED_SHORT;\n      typedArray = Uint16Array;\n    } else {\n      type = gl.UNSIGNED_INT;\n      typedArray = Uint32Array;\n      gl.getExtension('OES_element_index_unit');\n    }\n\n    const key = indices.toString();\n    let buffer = cachedBuffer[key];\n    if (!buffer) {\n      buffer = createIndicesBuffer(gl, new typedArray(indices));\n      cachedBuffer[key] = buffer;\n    }\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.drawElements(primitiveType, count, type, 0);\n  } else {\n    gl.drawArrays(primitiveType, 0, count);\n  }\n\n};\n\nexport default draw;\n","import createContext from './createContext.js';\nimport setState from './setState.js';\nimport createFramebuffer from './createFramebuffer.js';\nimport createTexture from './createTexture.js';\nimport createCubeMap from './createCubeMap.js';\nimport clear from './clear.js';\nimport draw from './draw.js';\n\nconst ToyGL = {\n  createContext,\n  setState,\n  clear,\n  draw,\n  createTexture,\n  createCubeMap,\n  createFramebuffer,\n};\n\nexport default ToyGL;\n","import defined from './defined.js';\nimport {\n  validateStencilFunc,\n  validateStencilOp,\n} from \"./glUtils.js\";\n\nexport default function setState(gl, state) {\n  const { depthTest, stencilTest, colorMask, cull, blend, viewport, scissor } = state;\n\n  if (cull) {\n    if (cull.enable) {\n      gl.enable(gl.CULL_FACE);\n    } else {\n      gl.disable(gl.CULL_FACE);\n    }\n\n    let face = cull.face && cull.face.toUpperCase();\n    if (face && (face === 'BACK' || face === 'FRONT' || face === 'FRONT_AND_BACK')) {\n      gl.cullFace(gl[face]);\n    }\n  }\n\n  if (depthTest) {\n    if (depthTest.enable === true) {\n      gl.enable(gl.DEPTH_TEST);\n    } else if (depthTest.enable === false) {\n      gl.disable(gl.DEPTH_TEST);\n    }\n\n    if (depthTest.func) {\n      const func = depthTest.func.toUpperCase();\n      gl.depthFunc(gl[func]);\n    }\n\n    if (depthTest.write === true) {\n      gl.depthMask(true);\n    } else if (depthTest.write === false) {\n      gl.depthMask(false);\n    }\n  }\n\n  if (stencilTest) {\n    if (stencilTest.enable === true) {\n      gl.enable(gl.STENCIL_TEST);\n    } else if (stencilTest.enable === false) {\n      gl.disable(gl.STENCIL_TEST);\n    }\n\n    if (defined(stencilTest.writeMask)) {\n      gl.stencilMask(stencilTest.writeMask);\n      // gl.stencilMaskSeparate(face, mask);\n    }\n\n    if (defined(stencilTest.func) &&\n      defined(stencilTest.ref) &&\n      defined(stencilTest.readMask)\n    ) {\n      if (validateStencilFunc(stencilTest.func) === false) {\n        throw new Error('setState: stencil func is invalid, current is ' + stencilTest.func + '!');\n      }\n      const func = stencilTest.func.toUpperCase();\n      gl.stencilFunc(gl[func], stencilTest.ref, stencilTest.readMask);\n      // gl.stencilFuncSeparate(face, func, ref, mask)\n    }\n\n    if (defined(stencilTest.fail) &&\n      defined(stencilTest.zfail) &&\n      defined(stencilTest.zpass)\n    ) {\n      if (validateStencilOp(stencilTest.fail) === false ||\n        validateStencilOp(stencilTest.zfail) === false ||\n        validateStencilOp(stencilTest.zpass) === false\n      ) {\n        throw new Error('setState: stencil op is invalid!');\n      }\n      const fail = stencilTest.fail.toUpperCase();\n      const zfail = stencilTest.zfail.toUpperCase();\n      const zpass = stencilTest.zpass.toUpperCase();\n      gl.stencilOp(gl[fail], gl[zfail], gl[zpass]);\n      // gl.stencilOpSeparate(face, fail, zfail, zpass)\n    }\n  }\n\n  if (colorMask) {\n    gl.colorMask(colorMask[0], colorMask[1], colorMask[2], colorMask[3]);\n  }\n\n  if (blend) {\n    if (blend.enable === true) {\n      gl.enable(gl.BLEND)\n    } else if (blend.enable === false) {\n      gl.disable(gl.BLEND)\n    }\n\n    if (blend.blendColor) {\n      gl.blendColor(...blend.blendColor);\n    }\n\n    if (blend.blendEquation) {\n      gl.blendEquation(gl[blend.blendEquation.toUpperCase()]);\n      // gl.blendEquation(modeRGB, modeAlpha)\n    }\n\n    if (blend.blendFunc) {\n      const src = blend.blendFunc[0].toUpperCase();\n      const dst = blend.blendFunc[1].toUpperCase();\n      gl.blendFunc(gl[src], gl[dst]);\n      // gl.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha)\n    }\n  }\n\n  if (viewport) {\n    gl.viewport(viewport[0], viewport[1], viewport[2], viewport[3]);\n  }\n\n  if (scissor) {\n    if (scissor.enable === true) {\n      gl.enable(gl.SCISSOR_TEST);\n    } else if (scissor.enable === false) {\n      gl.disable(gl.SCISSOR_TEST);\n    }\n    const rect = scissor.rect;\n    if (rect) {\n      gl.scissor(rect[0], rect[1], rect[2], rect[3]);\n    }\n  }\n};\n","import defined from './defined.js';\nimport defaultValue from './defaultValue.js';\n\n/**\n * Execute a clear command.\n * @param {WebGLRenderingContext} gl \n * @param {Object} [options] \n * @param {Array} [options.color] \n * @param {Number} [options.depth] \n * @param {Number} [options.stencil] \n * @param {WebGLFramebuffer} [options.fb] \n */\nfunction clear(gl, options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const { fb, color, depth, stencil } = options;\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n\n  let mask = 0;\n  if (color) {\n    gl.clearColor(color[0], color[1], color[2], color[3]);\n    mask |= gl.COLOR_BUFFER_BIT;\n  }\n  if (defined(depth)) {\n    gl.clearDepth(depth);\n    mask |= gl.DEPTH_BUFFER_BIT;\n  }\n  if (stencil) {\n    gl.clearStencil(stencil);\n    mask |= gl.STENCIL_BUFFER_BIT;\n  }\n\n  if (mask !== 0) {\n    gl.clear(mask);\n  }\n}\n\nexport default clear;\n","// see https://stackoverflow.com/questions/24048547/checking-if-an-object-is-array-like\nfunction isArrayLike(item) {\n  return (\n    Array.isArray(item) || \n    (!!item &&\n      typeof item === \"object\" &&\n      typeof (item.length) === \"number\" && \n      (item.length === 0 ||\n        (item.length > 0 && \n        (item.length - 1) in item)\n      )\n    )\n  );\n}\n\nexport default isArrayLike;\n","import isPowerOfTwo from './isPowerOfTwo.js';\nimport defined from './defined.js';\n\nfunction createTexture(gl, options) {\n  const { level, internalFormat, type, format, width, height, data, wrapS, wrapT, minFilter, magFilter, generateMipmap } = options;\n  const texture = gl.createTexture();\n\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  if (\n    data instanceof HTMLImageElement ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement\n  ) {\n    gl.texImage2D(gl.TEXTURE_2D, level, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  } else {\n    const border = 0;\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, format, type, data);\n  }\n\n  // default texture settings\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n  if (defined(wrapS)) {\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n  }\n  if (defined(wrapT)) {\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n  }\n  if (defined(minFilter)) {\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n  }\n  if (defined(magFilter)) {\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n  }\n\n  if (generateMipmap === true) {\n    if (isPowerOfTwo(width) && isPowerOfTwo(height)) {\n      gl.generateMipmap(gl.TEXTURE_2D);\n    } else {\n      console.warn('createTexture: texture size is NOT power of two, current is ' + width + 'x' + height + '.');\n    }\n  }\n\n  return texture;\n}\n\nexport default createTexture;\n","import defaultValue from './defaultValue.js';\n\nfunction createCubeMap(gl, options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const level = defaultValue(options.level, 0);\n  const data = options.data;\n  const width = options.width;\n  const height = options.height;\n  const format = defaultValue(options.format, gl.RGBA);\n  const type = defaultValue(options.type, gl.UNSIGNED_BYTE);\n  const internalFormat = defaultValue(options.internalFormat, gl.RGBA);\n\n  const texture = gl.createTexture();\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n\n  const faces = [\n    {\n      target: gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n      data: data.px,\n    },\n    {\n      target: gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n      data: data.nx,\n    },\n    {\n      target: gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n      data: data.py,\n    },\n    {\n      target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      data: data.ny,\n    },\n    {\n      target: gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n      data: data.pz,\n    },\n    {\n      target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n      data: data.nz,\n    },\n  ]\n  \n  for (let i = 0; i < 6; i++) {\n    const face = faces[i];\n    const target = face.target;\n    const bufferView = face.data;\n    if (bufferView instanceof HTMLImageElement) {\n      gl.texImage2D(target, level, internalFormat, format, type, bufferView);\n    } else {\n      gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, bufferView);\n    }\n\n    // default texture settings\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  }\n\n  return texture;\n}\n\nexport default createCubeMap;\n"],"names":["validateStencilOp","op","toUpperCase","defaultValue","a","b","EMPTY_OBJECT","Object","freeze","global","window","defined","FRAMEBUFFER_STATUS","36053","36054","36055","36057","36061","isPowerOfTwo","value","cachedProgram","cachedBuffer","cachedTextures","getAttributeSize","activeAttribute","name","size","type","s","console","warn","createAttributeBuffer","gl","typedArray","usage","buffer","createBuffer","STATIC_DRAW","bindBuffer","ARRAY_BUFFER","bufferData","createContext","contextOptions","canvas","document","createElement","style","width","height","setProperty","innerWidth","innerHeight","requireWebgl2","getContext","setState","state","depthTest","stencilTest","colorMask","cull","blend","viewport","scissor","enable","CULL_FACE","disable","face","cullFace","DEPTH_TEST","func","depthFunc","write","depthMask","STENCIL_TEST","writeMask","stencilMask","ref","readMask","validateStencilFunc","Error","stencilFunc","fail","zfail","zpass","stencilOp","BLEND","blendColor","blendEquation","blendFunc","src","dst","SCISSOR_TEST","rect","clear","options","fb","color","depth","stencil","bindFramebuffer","FRAMEBUFFER","mask","clearColor","COLOR_BUFFER_BIT","clearDepth","DEPTH_BUFFER_BIT","clearStencil","STENCIL_BUFFER_BIT","draw","attributes","indices","vs","vsSource","fs","fsSource","count","primitiveType","TRIANGLES","uniforms","key","program","vertexShaderSource","fragmentShaderSource","createShader","VERTEX_SHADER","shaderSource","compileShader","FRAGMENT_SHADER","createProgram","attachShader","deleteShader","linkProgram","log","getProgramParameter","LINK_STATUS","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","error","getProgramInfoLog","info","useProgram","numberOfAttributes","ACTIVE_ATTRIBUTES","i","getActiveAttrib","attributeName","hasOwnProperty","call","attribute","attribLocation","getAttribLocation","toString","Array","isArray","Float32Array","enableVertexAttribArray","vertexAttribPointer","FLOAT","Uint8Array","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","numberOfUniforms","ACTIVE_UNIFORMS","maximumTextureUnits","getParameter","MAX_TEXTURE_IMAGE_UNITS","currentTextureUnit","activeUniform","getActiveUniform","uniformName","uniform","uniformLocation","getUniformLocation","typeOfUniform","textureUnit","TEXTURE0","WebGLTexture","activeTexture","SAMPLER_2D","bindTexture","TEXTURE_2D","SAMPLER_CUBE","TEXTURE_CUBE_MAP","uniform1i","item","length","order","Math","floor","sqrt","transpose","from","uniform1f","texture","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","image","Image","addEventListener","REPEAT","LINEAR_MIPMAP_LINEAR","generateMipmap","max","Number","MIN_SAFE_INTEGER","index","UNSIGNED_SHORT","UNSIGNED_INT","getExtension","ELEMENT_ARRAY_BUFFER","createIndicesBuffer","drawElements","drawArrays","level","internalFormat","format","data","wrapS","wrapT","minFilter","magFilter","HTMLImageElement","HTMLCanvasElement","HTMLVideoElement","border","createCubeMap","faces","target","TEXTURE_CUBE_MAP_POSITIVE_X","px","TEXTURE_CUBE_MAP_NEGATIVE_X","nx","TEXTURE_CUBE_MAP_POSITIVE_Y","py","TEXTURE_CUBE_MAP_NEGATIVE_Y","ny","TEXTURE_CUBE_MAP_POSITIVE_Z","pz","TEXTURE_CUBE_MAP_NEGATIVE_Z","nz","bufferView","createFramebuffer","colorTexture","depthTexture","depthRenderbuffer","framebufferTexture2D","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE"],"mappings":"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"}