{"version":3,"file":"toygl.esm.min.js","sources":["../src/glUtils.js","../src/defaultValue.js","../src/createContext.js","../src/defined.js","../src/createFramebuffer.js","../src/isPowerOfTwo.js","../src/draw.js","../src/index.js","../src/setState.js","../src/clear.js","../src/isArrayLike.js","../src/createTexture.js","../src/createCubeMap.js"],"sourcesContent":["const global = window;\r\n\r\nfunction createProgram(gl, vertexShaderSource, fragmentShaderSource) {\r\n  const vs = gl.createShader(gl.VERTEX_SHADER);\r\n  gl.shaderSource(vs, vertexShaderSource);\r\n  gl.compileShader(vs);\r\n  \r\n  const fs = gl.createShader(gl.FRAGMENT_SHADER);\r\n  gl.shaderSource(fs, fragmentShaderSource);\r\n  gl.compileShader(fs);\r\n\r\n  const program = gl.createProgram();\r\n  gl.attachShader(program, vs);\r\n  gl.attachShader(program, fs);\r\n\r\n  gl.deleteShader(vs);\r\n  gl.deleteShader(fs);\r\n\r\n  // TODO:\r\n  // for (const attributeName in attributeLocation) {\r\n  //   if (Object.hasOwnProperty.call(attributeLocation, attributeName)) {\r\n  //     const location = attributeLocation[attributeName];\r\n  //     gl.bindAttribLocation(program, location, attributeName);\r\n  //   }\r\n  // }\r\n\r\n  gl.linkProgram(program);\r\n\r\n  let log = '';\r\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\r\n      log = gl.getShaderInfoLog(fs);\r\n      console.error('Fragment shader failed to compiled: ' + log);\r\n    }\r\n\r\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\r\n      log = gl.getShaderInfoLog(vs);\r\n      console.error('Vertex shader failed to compiled: ' + log);\r\n    }\r\n\r\n    log = gl.getProgramInfoLog(program);\r\n    console.error('Shader program link log: ' + log);\r\n    throw new Error(info);\r\n  }\r\n\r\n  return program;\r\n}\r\n\r\nfunction setCanvasToDisplaySize(canvas) {\r\n  const dpr = global.devicePixelRatio;\r\n  const displayWidth = Math.round(canvas.clientWidth * dpr);\r\n  const displayHeight = Math.round(canvas.clientHeight * dpr);\r\n\r\n  const needResize = canvas.width !== displayWidth ||\r\n                     canvas.height !== displayHeight;\r\n\r\n  if (needResize) {\r\n    canvas.width = displayWidth;\r\n    canvas.height = displayHeight;\r\n  }\r\n}\r\n\r\nfunction validateStencilFunc(func) {\r\n  func = func.toUpperCase();\r\n  if (func === 'NEVER' ||\r\n    func === 'ALWAYS' ||\r\n    func === 'LESS' ||\r\n    func === 'LEQUAL' ||\r\n    func === 'NOTEQUAL' ||\r\n    func === 'EQUAL' ||\r\n    func === 'GREATER' ||\r\n    func === 'GEQUAL'\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction validateStencilOp(op) {\r\n  op = op.toUpperCase();\r\n  if (op === 'KEEP' ||\r\n    op === 'ZERO' ||\r\n    op === 'REPLACE' ||\r\n    op === 'INCR' ||\r\n    op === 'DECR' ||\r\n    op === 'INVERT' ||\r\n    op === 'INCR_WRAP' ||\r\n    op === 'DECR_WRAP'\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport {\r\n  validateStencilFunc,\r\n  validateStencilOp,\r\n  createProgram,\r\n  setCanvasToDisplaySize,\r\n};\r\n","function defaultValue(a, b) {\r\n  if (a === null || a === undefined) {\r\n    return b;\r\n  }\r\n  return a;\r\n}\r\n\r\ndefaultValue.EMPTY_OBJECT = Object.freeze({});\r\n\r\nexport default defaultValue;\r\n","import { setCanvasToDisplaySize } from \"./glUtils.js\";\r\nimport defaultValue from './defaultValue.js';\r\n\r\nconst global = window;\r\n\r\n/**\r\n * Create an instance of WebGLRenderingContext or WebGL2RenderingContext.\r\n * @param {Object} contextOptions \r\n * @param {Boolean} contextOptions.alpha \r\n * @param {Boolean} contextOptions.depth \r\n * @param {Boolean} contextOptions.stencil \r\n * @param {Boolean} contextOptions.antialias \r\n * @param {Boolean} contextOptions.preserveDrawingBuffer \r\n * @param {Boolean} contextOptions.premultipliedAlpha \r\n * @param {Boolean} contextOptions.requireWebgl2 \r\n * @param {HTMLCanvasElement} contextOptions.canvas \r\n * @returns \r\n */\r\nfunction createContext(contextOptions) {\r\n  contextOptions = defaultValue(contextOptions, defaultValue.EMPTY_OBJECT);\r\n\r\n  let canvas = contextOptions.canvas;\r\n  if (!canvas) {\r\n    canvas = global.document.createElement('canvas');\r\n    canvas.style.width = '100vw';\r\n    canvas.style.height = '100vh';\r\n    canvas.style.setProperty('display', 'block');\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n  }\r\n\r\n  let gl;\r\n  if (contextOptions.requireWebgl2) {\r\n    gl = canvas.getContext('webgl2', contextOptions);\r\n  } else {\r\n    gl = canvas.getContext('webgl', contextOptions);\r\n  }\r\n\r\n  return gl;\r\n};\r\n\r\nexport default createContext;\r\n","function defined(a) {\r\n  return a !== null && a !== undefined;\r\n}\r\n\r\nexport default defined;\r\n","import defaultValue from './defaultValue.js';\r\n\r\nconst FRAMEBUFFER_STATUS = {\r\n  36053: 'FRAMEBUFFER_COMPLETE',\r\n  36054: 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT',\r\n  36055: 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT',\r\n  36057: 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS',\r\n  36061: 'FRAMEBUFFER_UNSUPPORTED',\r\n};\r\n\r\nfunction createFramebuffer(gl, options) {\r\n  const { colorTexture, depthTexture, depthRenderbuffer } = options;\r\n  const colorAttachments = defaultValue(options.colorAttachments, [ colorTexture ])\r\n\r\n  const fb = gl.createFramebuffer();\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n\r\n  // color\r\n  const colorAttachmentsLength = colorAttachments.length;\r\n  if (colorAttachmentsLength > 1) {\r\n    const ext = gl.getExtension('WebGL_draw_buffers');\r\n    ext.drawBuffersWEBGL([\r\n      ext.COLOR_ATTACHMENT0_WEBGL,\r\n      ext.COLOR_ATTACHMENT1_WEBGL,\r\n    ]);\r\n\r\n    for (let i = 0; i < colorAttachmentsLength; i++) {\r\n      const colorAttachment = colorAttachments[i];\r\n      gl.activeTexture(gl.TEXTURE0 + i);\r\n      gl.bindTexture(gl.TEXTURE_2D, colorAttachment);\r\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, colorAttachment, 0);\r\n    }\r\n  } else {\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, colorTexture);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, colorTexture, 0);\r\n  }\r\n  \r\n\r\n  // depth\r\n  if (depthTexture) {\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, depthTexture);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthTexture, 0);\r\n  }\r\n  else if (depthRenderbuffer) {\r\n    const renderbuffer = gl.createRenderbuffer();\r\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\r\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, depthRenderbuffer.width, depthRenderbuffer.height);\r\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderbuffer);\r\n  }\r\n\r\n  const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n  if (status !== gl.FRAMEBUFFER_COMPLETE) {\r\n    throw new Error('createFramebuffer: framebuffer combination is NOT completed! Current status is ' + FRAMEBUFFER_STATUS[status] + '.');\r\n  }\r\n\r\n  return fb;\r\n}\r\n\r\nexport default createFramebuffer;\r\n","function isPowerOfTwo(value) {\r\n  return (value & (value - 1)) === 0;\r\n}\r\n\r\nexport default isPowerOfTwo;\r\n","import isArrayLike from './isArrayLike.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport {\r\n  createProgram,\r\n} from './glUtils.js';\r\n\r\nconst cachedProgram = {};\r\nconst cachedBuffer = {};\r\nconst cachedTextures = {};\r\n\r\nfunction getNumberOfComponentsByType(type) {\r\n  let numberOfComponents = 0;\r\n\r\n  switch (type) {\r\n    case 5126: // gl.FLOAT\r\n      numberOfComponents = 1;\r\n      break;\r\n    case 35664: // gl.FLOAT_VEC2\r\n      numberOfComponents = 2;\r\n      break;\r\n    case 35665: // gl.FLOAT_VEC3\r\n      numberOfComponents = 3;\r\n      break;\r\n    case 35666: // gl.FLOAT_VEC4\r\n      numberOfComponents = 4;\r\n      break;\r\n    default:\r\n      throw new Error('Unrecognize ' + type + ' type.');\r\n  }\r\n  return numberOfComponents;\r\n}\r\n\r\nfunction getAttributeSize(activeAttribute) {\r\n  const { name, size, type } = activeAttribute;\r\n  let s = 0;\r\n  switch (type) {\r\n    case 5126: // gl.FLOAT\r\n      s = size * 1;\r\n      break;\r\n    case 35664: // gl.FLOAT_VEC2\r\n      s = 2 * size;\r\n      break;\r\n    case 35665: // gl.FLOAT_VEC3\r\n      s = 3 * size;\r\n      break;\r\n    case 35666: // gl.FLOAT_VEC4\r\n      s = 4 * size;\r\n      break;\r\n    case 35674: // gl.FLOAT_MAT2\r\n      s = 4 * size;\r\n      break;\r\n    case 35675: // gl.FLOAT_MAT3\r\n      s = 9 * size;\r\n      break;\r\n    case 35676: // gl.FLOAT_MAT4\r\n      s = 16 * size;\r\n      break;\r\n    default:\r\n      console.warn('无法识别 attribute ' + name + ' 的类型：' + type);\r\n  }\r\n\r\n  return s;\r\n}\r\n\r\nfunction isArrayBufferView(value) {\r\n  return value instanceof Float32Array ||\r\n         value instanceof Uint8Array ||\r\n         value instanceof Uint16Array ||\r\n         value instanceof Uint32Array ||\r\n         value instanceof Int8Array ||\r\n         value instanceof Int16Array ||\r\n         value instanceof Int32Array;\r\n\r\n}\r\n\r\nfunction createAttributeBuffer(gl, typedArray, usage) {\r\n  const buffer = gl.createBuffer();\r\n  usage = defaultValue(usage, gl.STATIC_DRAW);\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, typedArray, usage);\r\n  return buffer;\r\n};\r\n\r\nfunction createIndicesBuffer(gl, typedArray, usage) {\r\n  const buffer = gl.createBuffer();\r\n  usage = defaultValue(usage, gl.STATIC_DRAW);\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\r\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, typedArray, usage);\r\n  return buffer;\r\n};\r\n\r\nfunction draw(gl, options) {\r\n  const { attributes, indices, vs: vsSource, fs: fsSource, count, fb } = options;\r\n  const primitiveType = defaultValue(options.primitiveType, gl.TRIANGLES);\r\n  const uniforms = defaultValue(options.uniforms, defaultValue.EMPTY_OBJECT);\r\n\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n\r\n  const key = vsSource + fsSource;\r\n  let program = cachedProgram[key];\r\n  if (!program) {\r\n    program = createProgram(gl, vsSource, fsSource);\r\n    cachedProgram[key] = program;\r\n  }\r\n\r\n  gl.useProgram(program);\r\n\r\n  // attributes\r\n  const numberOfAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n  for (let i = 0; i < numberOfAttributes; i++) {\r\n    const activeAttribute = gl.getActiveAttrib(program, i);\r\n    const attributeName = activeAttribute.name;\r\n\r\n    if (Object.hasOwnProperty.call(attributes, attributeName)) {\r\n      const attribute = attributes[attributeName];\r\n      const attribLocation = gl.getAttribLocation(program, attributeName);\r\n\r\n      if (attribLocation === -1) {\r\n        continue;\r\n      }\r\n\r\n      const key = attribute.toString();\r\n      let buffer = cachedBuffer[key];\r\n      const size = getAttributeSize(activeAttribute);\r\n      if (Array.isArray(attribute)) {\r\n        // const isInteger = Number.isInteger(attribute[0]);\r\n        // const typedArray = isInteger ? Uint32Array : Float32Array;\r\n        const typedArray = Float32Array;\r\n        if (!buffer) {\r\n          buffer = createAttributeBuffer(gl, new typedArray(attribute));\r\n          cachedBuffer[key] = buffer;\r\n        }\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n        gl.enableVertexAttribArray(attribLocation);\r\n        gl.vertexAttribPointer(\r\n          attribLocation,\r\n          size,\r\n          gl.FLOAT,\r\n          false,\r\n          0,\r\n          0\r\n        );\r\n      } else if (isArrayBufferView(attribute)) {\r\n        if (!buffer) {\r\n          buffer = createAttributeBuffer(gl, attribute);\r\n          cachedBuffer[key] = buffer;\r\n        }\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n        gl.enableVertexAttribArray(attribLocation);\r\n        gl.vertexAttribPointer(\r\n          attribLocation,\r\n          size,\r\n          gl.FLOAT,\r\n          false,\r\n          0,\r\n          0\r\n        );\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  // uniforms\r\n  const numberOfUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n  const maximumTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n  let currentTextureUnit = 0;\r\n  for (let i = 0; i < numberOfUniforms; i++) {\r\n    const activeUniform = gl.getActiveUniform(program, i);\r\n    let uniformName = activeUniform.name;\r\n    let isUniformArray = false;\r\n\r\n    const indexOfBracket = uniformName.indexOf('[');\r\n    if (indexOfBracket >= 0) {\r\n      // \"u_xxx[0]\" => \"u_xxx\"\r\n      uniformName = uniformName.slice(0, indexOfBracket);\r\n      isUniformArray = true;\r\n    }\r\n    \r\n    if (Object.hasOwnProperty.call(uniforms, uniformName)) {\r\n      const uniform = uniforms[uniformName];\r\n      const uniformLocation = gl.getUniformLocation(program, uniformName);\r\n\r\n      if (uniformLocation === null) {\r\n        continue;\r\n      }\r\n\r\n      // support float, vec[234] uniform array\r\n      if (isUniformArray) {\r\n        const type = activeUniform.type;\r\n        const numberOfComponents = getNumberOfComponentsByType(type);\r\n\r\n        gl['uniform' + numberOfComponents + 'fv'](uniformLocation, Array.from(uniform));\r\n        continue;\r\n      }\r\n\r\n      // gl.useProgram(program);\r\n\r\n      const typeOfUniform = typeof uniform;\r\n      const textureUnit = gl.TEXTURE0 + currentTextureUnit;\r\n      if (uniform instanceof WebGLTexture) {\r\n        gl.activeTexture(textureUnit);\r\n\r\n        if (activeUniform.type === gl.SAMPLER_2D) {\r\n          gl.bindTexture(gl.TEXTURE_2D, uniform);\r\n        } else if (activeUniform.type === gl.SAMPLER_CUBE) {\r\n          gl.bindTexture(gl.TEXTURE_CUBE_MAP, uniform);\r\n        } else {\r\n          throw new Error(activeUniform, 'type MUST be SAMPLER_2D or SAMPLER_CUBE');\r\n        }\r\n\r\n        gl.uniform1i(uniformLocation, currentTextureUnit);\r\n        currentTextureUnit++;\r\n      } else if (isArrayLike(uniform)) {\r\n        const size = uniform.length;\r\n        if (size <= 4) {\r\n          gl['uniform' + size + 'fv' ](uniformLocation, uniform);\r\n        } else if (size <= 16) {\r\n          const order = Math.floor(Math.sqrt(size));\r\n          const transpose = false; // MUST be false\r\n          gl['uniformMatrix' + order + 'fv'](uniformLocation, transpose, Array.from(uniform));\r\n        }\r\n      } else if (typeOfUniform === 'number') {\r\n        gl.uniform1f(uniformLocation, uniform);\r\n      } else if (typeOfUniform === 'string') {\r\n\r\n        if (currentTextureUnit > maximumTextureUnits) {\r\n          console.error('texture exceed maximum texture units.');\r\n          continue;\r\n        }\r\n\r\n        let texture = cachedTextures[uniform];\r\n\r\n        if (!texture) {\r\n          texture = gl.createTexture();\r\n          gl.activeTexture(textureUnit);\r\n          gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\r\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([255, 255, 255, 255]));\r\n          const image = new Image();\r\n          image.src = uniform;\r\n          image.addEventListener('load', () => {\r\n            gl.activeTexture(textureUnit);\r\n            gl.bindTexture(gl.TEXTURE_2D, texture);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n          });\r\n\r\n          cachedTextures[uniform] = texture;\r\n        }\r\n\r\n        gl.activeTexture(textureUnit);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.uniform1i(uniformLocation, currentTextureUnit);\r\n\r\n        currentTextureUnit++;\r\n      }\r\n    }\r\n  }\r\n\r\n  // draw\r\n  if (indices && indices.length > 0) {\r\n    let max = Number.MIN_SAFE_INTEGER;\r\n    for (const index of indices) {\r\n      max = Math.max(index, max);\r\n    }\r\n    let type, typedArray;\r\n    if (max <= 255) {\r\n      type = gl.UNSIGNED_BYTE;\r\n      typedArray = Uint8Array;\r\n    } else if (max <= 65535) {\r\n      type = gl.UNSIGNED_SHORT;\r\n      typedArray = Uint16Array;\r\n    } else {\r\n      type = gl.UNSIGNED_INT;\r\n      typedArray = Uint32Array;\r\n      gl.getExtension('OES_element_index_unit');\r\n    }\r\n\r\n    const key = indices.toString();\r\n    let buffer = cachedBuffer[key];\r\n    if (!buffer) {\r\n      buffer = createIndicesBuffer(gl, new typedArray(indices));\r\n      cachedBuffer[key] = buffer;\r\n    }\r\n\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\r\n    gl.drawElements(primitiveType, count, type, 0);\r\n  } else {\r\n    gl.drawArrays(primitiveType, 0, count);\r\n  }\r\n\r\n};\r\n\r\nexport default draw;\r\n","import createContext from './createContext.js';\r\nimport setState from './setState.js';\r\nimport createFramebuffer from './createFramebuffer.js';\r\nimport createTexture from './createTexture.js';\r\nimport createCubeMap from './createCubeMap.js';\r\nimport clear from './clear.js';\r\nimport draw from './draw.js';\r\n\r\nconst ToyGL = {\r\n  createContext,\r\n  setState,\r\n  clear,\r\n  draw,\r\n  createTexture,\r\n  createCubeMap,\r\n  createFramebuffer,\r\n};\r\n\r\nexport default ToyGL;\r\n","import defined from './defined.js';\r\nimport {\r\n  validateStencilFunc,\r\n  validateStencilOp,\r\n} from \"./glUtils.js\";\r\n\r\nexport default function setState(gl, state) {\r\n  const { depthTest, stencilTest, colorMask, cull, blend, viewport, scissor } = state;\r\n\r\n  if (cull) {\r\n    if (cull.enable) {\r\n      gl.enable(gl.CULL_FACE);\r\n    } else {\r\n      gl.disable(gl.CULL_FACE);\r\n    }\r\n\r\n    let face = cull.face && cull.face.toUpperCase();\r\n    if (face && (face === 'BACK' || face === 'FRONT' || face === 'FRONT_AND_BACK')) {\r\n      gl.cullFace(gl[face]);\r\n    }\r\n  }\r\n\r\n  if (depthTest) {\r\n    if (depthTest.enable === true) {\r\n      gl.enable(gl.DEPTH_TEST);\r\n    } else if (depthTest.enable === false) {\r\n      gl.disable(gl.DEPTH_TEST);\r\n    }\r\n\r\n    if (depthTest.func) {\r\n      const func = depthTest.func.toUpperCase();\r\n      gl.depthFunc(gl[func]);\r\n    }\r\n\r\n    if (depthTest.write === true) {\r\n      gl.depthMask(true);\r\n    } else if (depthTest.write === false) {\r\n      gl.depthMask(false);\r\n    }\r\n  }\r\n\r\n  if (stencilTest) {\r\n    if (stencilTest.enable === true) {\r\n      gl.enable(gl.STENCIL_TEST);\r\n    } else if (stencilTest.enable === false) {\r\n      gl.disable(gl.STENCIL_TEST);\r\n    }\r\n\r\n    if (defined(stencilTest.writeMask)) {\r\n      gl.stencilMask(stencilTest.writeMask);\r\n      // gl.stencilMaskSeparate(face, mask);\r\n    }\r\n\r\n    if (defined(stencilTest.func) &&\r\n      defined(stencilTest.ref) &&\r\n      defined(stencilTest.readMask)\r\n    ) {\r\n      if (validateStencilFunc(stencilTest.func) === false) {\r\n        throw new Error('setState: stencil func is invalid, current is ' + stencilTest.func + '!');\r\n      }\r\n      const func = stencilTest.func.toUpperCase();\r\n      gl.stencilFunc(gl[func], stencilTest.ref, stencilTest.readMask);\r\n      // gl.stencilFuncSeparate(face, func, ref, mask)\r\n    }\r\n\r\n    if (defined(stencilTest.fail) &&\r\n      defined(stencilTest.zfail) &&\r\n      defined(stencilTest.zpass)\r\n    ) {\r\n      if (validateStencilOp(stencilTest.fail) === false ||\r\n        validateStencilOp(stencilTest.zfail) === false ||\r\n        validateStencilOp(stencilTest.zpass) === false\r\n      ) {\r\n        throw new Error('setState: stencil op is invalid!');\r\n      }\r\n      const fail = stencilTest.fail.toUpperCase();\r\n      const zfail = stencilTest.zfail.toUpperCase();\r\n      const zpass = stencilTest.zpass.toUpperCase();\r\n      gl.stencilOp(gl[fail], gl[zfail], gl[zpass]);\r\n      // gl.stencilOpSeparate(face, fail, zfail, zpass)\r\n    }\r\n  }\r\n\r\n  if (colorMask) {\r\n    gl.colorMask(colorMask[0], colorMask[1], colorMask[2], colorMask[3]);\r\n  }\r\n\r\n  if (blend) {\r\n    if (blend.enable === true) {\r\n      gl.enable(gl.BLEND)\r\n    } else if (blend.enable === false) {\r\n      gl.disable(gl.BLEND)\r\n    }\r\n\r\n    if (blend.blendColor) {\r\n      gl.blendColor(...blend.blendColor);\r\n    }\r\n\r\n    if (blend.blendEquation) {\r\n      const equationName = blend.blendEquation.toUpperCase();\r\n      const equation = gl[equationName];\r\n      if (!defined(equation)) {\r\n        throw new Error(equationName + ' is not defined.');\r\n      }\r\n      gl.blendEquation(equation);\r\n      // gl.blendEquation(modeRGB, modeAlpha)\r\n    }\r\n\r\n    if (blend.blendFunc) {\r\n      const srcFuncName = blend.blendFunc[0].toUpperCase();\r\n      const dstFuncName = blend.blendFunc[1].toUpperCase();\r\n      const src = gl[srcFuncName];\r\n      const dst = gl[dstFuncName];\r\n      if (!defined(src)) {\r\n        throw new Error('gl.' + srcFuncName + ' is not defined.');\r\n      }\r\n      if (!defined(dst)) {\r\n        throw new Error('gl.' + dstFuncName + ' is not defined.');\r\n      }\r\n      gl.blendFunc(src, dst);\r\n      // gl.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha)\r\n    }\r\n  }\r\n\r\n  if (viewport) {\r\n    gl.viewport(viewport[0], viewport[1], viewport[2], viewport[3]);\r\n  }\r\n\r\n  if (scissor) {\r\n    if (scissor.enable === true) {\r\n      gl.enable(gl.SCISSOR_TEST);\r\n    } else if (scissor.enable === false) {\r\n      gl.disable(gl.SCISSOR_TEST);\r\n    }\r\n    const rect = scissor.rect;\r\n    if (rect) {\r\n      gl.scissor(rect[0], rect[1], rect[2], rect[3]);\r\n    }\r\n  }\r\n};\r\n","import defined from './defined.js';\r\nimport defaultValue from './defaultValue.js';\r\n\r\n/**\r\n * Execute a clear command.\r\n * @param {WebGLRenderingContext} gl \r\n * @param {Object} [options] \r\n * @param {Array} [options.color] \r\n * @param {Number} [options.depth] \r\n * @param {Number} [options.stencil] \r\n * @param {WebGLFramebuffer} [options.fb] \r\n */\r\nfunction clear(gl, options) {\r\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n  const { fb, color, depth, stencil } = options;\r\n\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n\r\n  let mask = 0;\r\n  if (color) {\r\n    gl.clearColor(color[0], color[1], color[2], color[3]);\r\n    mask |= gl.COLOR_BUFFER_BIT;\r\n  }\r\n  if (defined(depth)) {\r\n    gl.clearDepth(depth);\r\n    mask |= gl.DEPTH_BUFFER_BIT;\r\n  }\r\n  if (stencil) {\r\n    gl.clearStencil(stencil);\r\n    mask |= gl.STENCIL_BUFFER_BIT;\r\n  }\r\n\r\n  if (mask !== 0) {\r\n    gl.clear(mask);\r\n  }\r\n}\r\n\r\nexport default clear;\r\n","// see https://stackoverflow.com/questions/24048547/checking-if-an-object-is-array-like\r\nfunction isArrayLike(item) {\r\n  return (\r\n    Array.isArray(item) || \r\n    (!!item &&\r\n      typeof item === \"object\" &&\r\n      typeof (item.length) === \"number\" && \r\n      (item.length === 0 ||\r\n        (item.length > 0 && \r\n        (item.length - 1) in item)\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\nexport default isArrayLike;\r\n","import isPowerOfTwo from './isPowerOfTwo.js';\r\nimport defined from './defined.js';\r\n\r\nfunction createTexture(gl, options) {\r\n  const { level, internalFormat, type, format, width, height, data, wrapS, wrapT, minFilter, magFilter, generateMipmap } = options;\r\n  const texture = gl.createTexture();\r\n\r\n  gl.activeTexture(gl.TEXTURE0);\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n  if (\r\n    data instanceof HTMLImageElement ||\r\n    data instanceof HTMLCanvasElement ||\r\n    data instanceof HTMLVideoElement\r\n  ) {\r\n    gl.texImage2D(gl.TEXTURE_2D, level, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\r\n  } else {\r\n    const border = 0;\r\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, format, type, data);\r\n  }\r\n\r\n  // default texture settings\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\r\n  if (defined(wrapS)) {\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\r\n  }\r\n  if (defined(wrapT)) {\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\r\n  }\r\n  if (defined(minFilter)) {\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\r\n  }\r\n  if (defined(magFilter)) {\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\r\n  }\r\n\r\n  if (generateMipmap === true) {\r\n    if (isPowerOfTwo(width) && isPowerOfTwo(height)) {\r\n      gl.generateMipmap(gl.TEXTURE_2D);\r\n    } else {\r\n      console.warn('createTexture: texture size is NOT power of two, current is ' + width + 'x' + height + '.');\r\n    }\r\n  }\r\n\r\n  return texture;\r\n}\r\n\r\nexport default createTexture;\r\n","import defaultValue from './defaultValue.js';\r\n\r\nfunction createCubeMap(gl, options) {\r\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n  const level = defaultValue(options.level, 0);\r\n  const data = options.data;\r\n  const width = options.width;\r\n  const height = options.height;\r\n  const format = defaultValue(options.format, gl.RGBA);\r\n  const type = defaultValue(options.type, gl.UNSIGNED_BYTE);\r\n  const internalFormat = defaultValue(options.internalFormat, gl.RGBA);\r\n\r\n  const texture = gl.createTexture();\r\n  gl.activeTexture(gl.TEXTURE0);\r\n  gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\r\n\r\n  const faces = [\r\n    {\r\n      target: gl.TEXTURE_CUBE_MAP_POSITIVE_X,\r\n      data: data.px,\r\n    },\r\n    {\r\n      target: gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\r\n      data: data.nx,\r\n    },\r\n    {\r\n      target: gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\r\n      data: data.py,\r\n    },\r\n    {\r\n      target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\r\n      data: data.ny,\r\n    },\r\n    {\r\n      target: gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\r\n      data: data.pz,\r\n    },\r\n    {\r\n      target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\r\n      data: data.nz,\r\n    },\r\n  ]\r\n  \r\n  for (let i = 0; i < 6; i++) {\r\n    const face = faces[i];\r\n    const target = face.target;\r\n    const bufferView = face.data;\r\n    if (bufferView instanceof HTMLImageElement) {\r\n      gl.texImage2D(target, level, internalFormat, format, type, bufferView);\r\n    } else {\r\n      gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, bufferView);\r\n    }\r\n\r\n    // default texture settings\r\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n  }\r\n\r\n  return texture;\r\n}\r\n\r\nexport default createCubeMap;\r\n"],"names":["validateStencilOp","op","toUpperCase","defaultValue","a","b","EMPTY_OBJECT","Object","freeze","global","window","defined","FRAMEBUFFER_STATUS","36053","36054","36055","36057","36061","isPowerOfTwo","value","cachedProgram","cachedBuffer","cachedTextures","getNumberOfComponentsByType","type","numberOfComponents","Error","getAttributeSize","activeAttribute","name","size","s","console","warn","createAttributeBuffer","gl","typedArray","usage","buffer","createBuffer","STATIC_DRAW","bindBuffer","ARRAY_BUFFER","bufferData","ToyGL","createContext","contextOptions","canvas","document","createElement","style","width","height","setProperty","innerWidth","innerHeight","requireWebgl2","getContext","setState","state","depthTest","stencilTest","colorMask","cull","blend","viewport","scissor","enable","CULL_FACE","disable","face","cullFace","DEPTH_TEST","func","depthFunc","write","depthMask","STENCIL_TEST","writeMask","stencilMask","ref","readMask","validateStencilFunc","stencilFunc","fail","zfail","zpass","stencilOp","BLEND","blendColor","blendEquation","equationName","equation","blendFunc","srcFuncName","dstFuncName","src","dst","SCISSOR_TEST","rect","clear","options","fb","color","depth","stencil","bindFramebuffer","FRAMEBUFFER","mask","clearColor","COLOR_BUFFER_BIT","clearDepth","DEPTH_BUFFER_BIT","clearStencil","STENCIL_BUFFER_BIT","draw","attributes","indices","vs","vsSource","fs","fsSource","count","primitiveType","TRIANGLES","uniforms","key","program","vertexShaderSource","fragmentShaderSource","createShader","VERTEX_SHADER","shaderSource","compileShader","FRAGMENT_SHADER","createProgram","attachShader","deleteShader","linkProgram","log","getProgramParameter","LINK_STATUS","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","error","getProgramInfoLog","info","useProgram","numberOfAttributes","ACTIVE_ATTRIBUTES","i","getActiveAttrib","attributeName","hasOwnProperty","call","attribute","attribLocation","getAttribLocation","toString","Array","isArray","Float32Array","enableVertexAttribArray","vertexAttribPointer","FLOAT","Uint8Array","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","numberOfUniforms","ACTIVE_UNIFORMS","maximumTextureUnits","getParameter","MAX_TEXTURE_IMAGE_UNITS","currentTextureUnit","activeUniform","getActiveUniform","uniformName","isUniformArray","indexOfBracket","indexOf","slice","uniform","uniformLocation","getUniformLocation","from","typeOfUniform","textureUnit","TEXTURE0","WebGLTexture","activeTexture","SAMPLER_2D","bindTexture","TEXTURE_2D","SAMPLER_CUBE","TEXTURE_CUBE_MAP","uniform1i","item","length","order","Math","floor","sqrt","transpose","uniform1f","texture","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","image","Image","addEventListener","max","Number","MIN_SAFE_INTEGER","index","UNSIGNED_SHORT","UNSIGNED_INT","getExtension","ELEMENT_ARRAY_BUFFER","createIndicesBuffer","drawElements","drawArrays","level","internalFormat","format","data","wrapS","wrapT","minFilter","magFilter","generateMipmap","HTMLImageElement","HTMLCanvasElement","HTMLVideoElement","border","createCubeMap","faces","target","TEXTURE_CUBE_MAP_POSITIVE_X","px","TEXTURE_CUBE_MAP_NEGATIVE_X","nx","TEXTURE_CUBE_MAP_POSITIVE_Y","py","TEXTURE_CUBE_MAP_NEGATIVE_Y","ny","TEXTURE_CUBE_MAP_POSITIVE_Z","pz","TEXTURE_CUBE_MAP_NEGATIVE_Z","nz","bufferView","createFramebuffer","colorTexture","depthTexture","depthRenderbuffer","colorAttachments","colorAttachmentsLength","ext","drawBuffersWEBGL","COLOR_ATTACHMENT0_WEBGL","COLOR_ATTACHMENT1_WEBGL","colorAttachment","framebufferTexture2D","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE"],"mappings":"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"}